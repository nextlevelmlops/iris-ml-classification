version: '3'
dotenv: [.env]

vars:
  PACKAGE_IMPORT_NAME: iris_ml_classification
  PYTHON_VERSION: 3.11
  APP_NAME: inference_app

tasks:
  create-venv:
    desc: Create a virtual environment
    cmds:
      - uv venv -p {{.PYTHON_VERSION}} .venv
    silent: false

  sync-dev:
    desc: Sync project dependencies with optionals
    cmds:
      - rm -rf .venv
      - task: create-venv
      - uv sync --extra dev

  lint:
    desc: Run pre-commit hooks
    cmds:
      - uv run pre-commit run --all-files

  run-unit-tests:
    cmds:
      - export PYTEST_EXIT_STATUS=0
      - rm -rf test-reports || true
      - uv run pytest -m "not ci_exclude" ./tests --cov "{{.TASKFILE_DIR}}/src/{{.PACKAGE_IMPORT_NAME}}" --cov-report html --cov-report term  --cov-report xml --junit-xml "{{.TASKFILE_DIR}}/test-reports/report.xml" --cov-fail-under 60 || ((PYTEST_EXIT_STATUS+=$?))
      - mv coverage.xml "{{.TASKFILE_DIR}}/test-reports/" || true
      - mv htmlcov "{{.TASKFILE_DIR}}/test-reports/" && rm -rf htmlcov
      - mv .coverage "{{.TASKFILE_DIR}}/test-reports/" || true
      - exit $PYTEST_EXIT_STATUS
    silent: true
    desc: "Run tests with coverage reports and move results to test-reports directory"

  clean:
    desc: "Clean up build artifacts, caches, and temporary files"
    cmds:
      - rm -rf dist build coverage.xml test-reports tests/mlruns test-house_price
      - find . -type d \( -name "*cache*" -o -name "*.dist-info" -o -name "*.egg-info" -o -name "*htmlcov" \) -not -path "*env/*" -exec rm -r {} + || true
      - find . -type f -name "*.pyc" -not -path "*env/*" -exec rm {} +
    silent: true

  build:
    desc: Build the project
    cmds:
      - uv build

  serve-coverage-report:
    desc: "Serve the coverage report via a local HTTP server on port 8000"
    cmd: |
      echo "Coverage report available at: http://localhost:8000/"
      python -m http.server --directory "{{.TASKFILE_DIR}}/test-reports/htmlcov/" 8000
    silent: false

  # ---------------Databricks Asset Bundles tasks ----------------------
  validate:
    desc: Validate your configuration
    cmds:
      - databricks --profile DEFAULT bundle validate
    silent: false

  deploy:
    desc: Deploy to your workspace (default is dev target)
    cmds:
      - databricks --profile DEFAULT bundle deploy
    silent: false

  run:
    desc: start the app in your workspace
    cmds:
      - databricks --profile DEFAULT bundle run {{.APP_NAME}}
    silent: false

  summary:
    desc: Retrieve the appâ€™s URL using and some details
    cmds:
      - databricks --profile DEFAULT bundle summary
    silent: false

  destroy:
    desc: Destroy the bundle
    cmds:
      - databricks --profile DEFAULT bundle destroy -t dev --auto-approve
    silent: false

  destroy_as_sp:
    desc: Destroy the bundle
    cmds:
      - databricks --profile service-principal-profile bundle destroy -t dev --auto-approve
    silent: false

  help:
    desc: Print all tasks defined in the Taskfile
    cmd: task -l
    silent: true

  default:
    cmds:
      - task: help
    silent: true

# ---------------Mkdocs Documentation ----------------------
  make-doc:
    desc: Generate makedocs Documentation
    cmds:
      - uv run mkdocs serve
    silent: false
